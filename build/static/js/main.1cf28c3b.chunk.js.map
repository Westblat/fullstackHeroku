{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","create","newObject","post","update","id","put","deleteObject","delete","Filter","filter","setFilter","onChange","e","target","value","PersonForm","setPersons","persons","setErrorMessage","setSuccessMessage","useState","newName","setNewName","newNumber","setNewNumber","type","onClick","preventDefault","find","name","console","log","window","confirm","obj","updatedPerson","personsService","number","then","res","copy","data","setTimeout","catch","err","Persons","shownNames","map","person","i","App","successMessage","errorMessage","useEffect","error","includes","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cf28c3b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = '/api/persons/'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteObject = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\nconst personService = {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    deleteObject: deleteObject,\r\n}\r\n\r\nexport default personService;","import React, { useState, useEffect } from 'react'\nimport personsService from \"./services/persons\";\nimport './app.css'\n\n\nconst Filter = ({filter, setFilter}) => {\n    return (<div>\n        filter shown with <input onChange={(e) => setFilter(e.target.value)}/>\n    </div>)\n}\n\nconst PersonForm =({ setPersons, persons, setErrorMessage, setSuccessMessage}) => {\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n\n    return(\n        <form>\n            <h1> Add new person</h1>\n            <div>\n                name: <input onChange={(e) => setNewName(e.target.value)}/>\n            </div>\n            <div>\n                number: <input onChange={(e) => setNewNumber(e.target.value)}/>\n            </div>\n\n            <div>\n                <button type=\"sumbit\" onClick={(e) => {\n                    e.preventDefault();\n                    if(persons.find(e => e.name === newName)){\n                        console.log(newNumber, newName)\n                        if(window.confirm(`User with name ${newName} exists already, do you want to replace old number?`)){\n                            console.log(persons.filter(obj => obj.name === newName))\n                            const updatedPerson = persons.filter(obj => obj.name === newName)[0]\n                            personsService.update(updatedPerson.id, {name: newName, number: newNumber})\n                                .then((res) => {\n                                    const copy = persons.filter(obj => obj.id !== updatedPerson.id)\n                                    setPersons([...copy, res.data])\n                                    setSuccessMessage(\"User updated succesfully\")\n                                    setTimeout(() => {\n                                        setSuccessMessage(null)\n                                    }, 5000)\n                                }).catch(err => {\n                                    setErrorMessage(\"This user was already deleted from server\")\n                                    setTimeout(() => {\n                                        setErrorMessage(null)\n                                    }, 5000)\n                            })\n                        }\n                    } else {\n                        personsService.create({name: newName, number: newNumber})\n                            .then(res => {\n                                setPersons([...persons, res.data])\n                                setSuccessMessage(\"User added succesfully\")\n                                setTimeout(() => {\n                                    setSuccessMessage(null)\n                                }, 5000)\n\n                            })\n                    }\n\n                }}>add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Persons = ({shownNames, setPersons, persons, setErrorMessage, setSuccessMessage}) => {\n    return (\n        <div>\n            {shownNames?.map((person, i) => {\n                return (\n                    <div key={i}>\n                        <span>{person.name} {person.number}</span>\n                        <button onClick={(e)=> {\n                            if(window.confirm(`Delete ${person.name} ?`)){\n                                personsService.deleteObject(person.id)\n                                    .then((res) => {\n                                        setPersons(persons.filter(value => value.id !== person.id))\n                                        setSuccessMessage(\"User deleted succesfully\")\n                                        setTimeout(() => {\n                                            setSuccessMessage(null)\n                                        }, 5000)\n\n                                    }).catch(err => {\n                                    setErrorMessage(\"This user was already deleted from server\")\n                                    setTimeout(() => {\n                                        setErrorMessage(null)\n                                    }, 5000)\n                                })\n                            }\n                        }}>Delete</button>\n                    </div>\n                    )\n            })}\n\n        </div>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [filter, setFilter] = useState('')\n    const [successMessage, setSuccessMessage] = useState(null)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    useEffect(()=>{\n        personsService.getAll()\n            .then(res =>{\n                if (!res.error) {\n                    setPersons(res.data)\n                }\n        })\n    },[])\n\n    const shownNames = persons.filter(person => person.name.includes(filter))\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            {successMessage && <p className='success'>{successMessage}</p>}\n            {errorMessage && <p className='error'>{errorMessage}</p>}\n            <Filter setFilter={setFilter}/>\n            <PersonForm\n                persons={persons}\n                setPersons={setPersons}\n                setErrorMessage={setErrorMessage}\n                setSuccessMessage={setSuccessMessage}\n            />\n        <h2>Numbers</h2>\n            <Persons\n                shownNames={shownNames}\n                persons={persons}\n                setPersons={setPersons}\n                setErrorMessage={setErrorMessage}\n                setSuccessMessage={setSuccessMessage}\n            />\n      </div>\n    )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}